#  Dockerfile to build the mspdotnetapp container
FROM docker.io/library/amazonlinux:latest as installer
RUN echo "proxy=http://10.151.204.100:8080" >> /etc/yum.conf
ENV BIN_DIR "/usr/local/bin"
ENV KUBECTL_VERSION "1.26.1"
ENV HELM_VERSION "v3.11.1"
ENV ARGO_Version "v2.0.3"
ENV TARGETOS "linux"
ENV TARGETARCH "amd64"
ENV KUSTOMIZE_VERSION "5.0.0"
RUN yum update -y \
  && yum install -y unzip \
  && yum install -y zip \
  && yum install -y gzip \
  && yum install -y wget \
  && yum install -y openssl \
  && yum install -y tar \
  && yum install -y jq \
  && yum install -y ca-certificates \
  && yum install -y which  \
  && yum install -y libicu \
  #&& wget https://download.visualstudio.microsoft.com/download/pr/17b6759f-1af0-41bc-ab12-209ba0377779/e8d02195dbf1434b940e0f05ae086453/dotnet-sdk-6.0.100-linux-x64.tar.gz \
  #&& mkdir -p /usr/share/dotnet \
  #&& tar -xzf dotnet-sdk-6.0.100-linux-x64.tar.gz -C /usr/share/dotnet  \
  #&& rm dotnet-sdk-6.0.100-linux-x64.tar.gz \
  #&& ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet \
  && rpm --import https://packages.microsoft.com/keys/microsoft.asc \
  && wget -O /etc/yum.repos.d/microsoft-prod.repo https://packages.microsoft.com/config/fedora/37/prod.repo \
  && dnf install -y dotnet-sdk-8.0 \
  && curl https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip \
  && unzip -o -q awscliv2.zip \
  # The --bin-dir is specified so that we can copy the
  # entire bin directory from the installer stage into
  # into /usr/local/bin of the final stage without
  # accidentally copying over any other executables that
  # may be present in /usr/local/bin of the installer stage.
  && ./aws/install --bin-dir /aws-cli-bin \
  # Install git
  && yum install -y git \
  && git init \
  # Install kubectl
  && wget https://storage.googleapis.com/kubernetes-release/release/v1.26.1/bin/linux/amd64/kubectl \
  && chmod +x kubectl \
  && mv kubectl ${BIN_DIR} \
# install kustomize 
  && curl -fL https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v${KUSTOMIZE_VERSION}/kustomize_v${KUSTOMIZE_VERSION}_${TARGETOS}_${TARGETARCH}.tar.gz | tar xz \                                 
  && chmod +x kustomize \
  && mv kustomize ${BIN_DIR} \   
 # Install Helm
  && curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 \
  && chmod 700 get_helm.sh \
  && ./get_helm.sh \
  && yum install -y java-17-amazon-corretto-devel
  
# RUN curl -L -o /tmp/openjdk-17_linux-x64_bin.tar.gz https://download.java.net/java/GA/jdk17/0d483333a00540d886896bac774ff48b/35/GPL/openjdk-17_linux-x64_bin.tar.gz \
    # && tar xfvz /tmp/openjdk-17_linux-x64_bin.tar.gz -C /opt \
    # && ln -s /opt/jdk-17 /opt/java \
    # && rm /tmp/openjdk-17_linux-x64_bin.tar.gz

# Set Java environment variables
# ENV JAVA_HOME=/opt/java
# ENV PATH="$JAVA_HOME/bin:$PATH"

# Verify the installation
RUN java -version

# Define SonarScanner version
ARG SONAR_SCANNER_VERSION=6.2.0.85879

# Download and install SonarScanner for .NET
RUN curl -LO https://github.com/SonarSource/sonar-scanner-msbuild/releases/download/6.2.0.85879/sonar-scanner-6.2.0.85879-net-framework.zip\
    && mkdir -p /opt/sonar-scanner \
    && unzip sonar-scanner-6.2.0.85879-net-framework.zip -d /opt/sonar-scanner \
    && rm sonar-scanner-6.2.0.85879-net-framework.zip \
    && ln -s /opt/sonar-scanner/sonar-scanner-6.2.0.85879-net-framework /opt/sonar-scanner/latest

# Add SonarScanner to PATH
ENV PATH="/opt/sonar-scanner/latest:${PATH}"
RUN unset http_proxy
RUN unset https_proxy
FROM docker.io/library/amazonlinux:latest
RUN echo "proxy=http://10.151.204.100:8080" >> /etc/yum.conf
COPY --from=installer /usr/ /usr/
COPY --from=installer /aws-cli-bin/ /usr/local/bin/
RUN yum update -y \
  && yum install -y less groff \
  && yum clean all
RUN unset http_proxy
RUN unset https_proxy
ENTRYPOINT ["/bin/sh"]
